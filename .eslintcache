[{"/home/hvmlopez/simple-todo-app-ts/src/index.tsx":"1","/home/hvmlopez/simple-todo-app-ts/src/reportWebVitals.ts":"2","/home/hvmlopez/simple-todo-app-ts/src/App.tsx":"3","/home/hvmlopez/simple-todo-app-ts/src/Components/Form.tsx":"4","/home/hvmlopez/simple-todo-app-ts/src/Components/TodoList.tsx":"5","/home/hvmlopez/simple-todo-app-ts/src/store/context.tsx":"6","/home/hvmlopez/simple-todo-app-ts/src/Components/Todo.tsx":"7"},{"size":504,"mtime":1607008798852,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607005952467,"results":"10","hashOfConfig":"9"},{"size":1227,"mtime":1607016860416,"results":"11","hashOfConfig":"9"},{"size":2235,"mtime":1607015385132,"results":"12","hashOfConfig":"9"},{"size":1100,"mtime":1607015054850,"results":"13","hashOfConfig":"9"},{"size":329,"mtime":1607015986357,"results":"14","hashOfConfig":"9"},{"size":1331,"mtime":1607015250144,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x7ow0d",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/hvmlopez/simple-todo-app-ts/src/index.tsx",[],"/home/hvmlopez/simple-todo-app-ts/src/reportWebVitals.ts",[],"/home/hvmlopez/simple-todo-app-ts/src/App.tsx",[],"/home/hvmlopez/simple-todo-app-ts/src/Components/Form.tsx",[],["32","33"],"/home/hvmlopez/simple-todo-app-ts/src/Components/TodoList.tsx",["34"],"import React, {useContext} from 'react';\nimport TodoListStore from '../store/context';\nimport Todo from './Todo';\n\nexport interface TodoListProps {\n    \n}\ninterface Todo_ {\n    text: string; \n    completed: boolean; \n    id: number\n  }\nconst TodoList: React.FC<TodoListProps> = (props) => {\n    const [State, _] = useContext(TodoListStore);\n\n\n    let state = null;\n\n    if(State.status === 'all')\n    {\n        state = State.all;\n    }\n\n    if(State.status === 'completed'){\n        state = State.completed;\n    }\n\n    if(State.status === 'uncompleted'){\n        state = State.uncompleted;\n\n    }\n\n    return ( \n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {state? state.map((task:  Todo_) =>{\n                    return <Todo\n                        key={task.id}\n                        text={task.text}\n                        id={task.id}\n                        completed={task.completed}                    \n                    />\n                })\n                : null}\n            </ul>\n        </div>\n     );\n}\n \nexport default TodoList;","/home/hvmlopez/simple-todo-app-ts/src/store/context.tsx",[],"/home/hvmlopez/simple-todo-app-ts/src/Components/Todo.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":14,"column":19,"nodeType":"41","messageId":"42","endLine":14,"endColumn":20},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]